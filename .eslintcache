[{"D:\\src\\HeroicGamesLauncher\\src\\index.tsx":"1","D:\\src\\HeroicGamesLauncher\\src\\reportWebVitals.ts":"2","D:\\src\\HeroicGamesLauncher\\src\\App.tsx":"3","D:\\src\\HeroicGamesLauncher\\src\\state\\GlobalState.tsx":"4","D:\\src\\HeroicGamesLauncher\\src\\helper.ts":"5","D:\\src\\HeroicGamesLauncher\\src\\state\\ContextProvider.tsx":"6","D:\\src\\HeroicGamesLauncher\\src\\components\\Login.tsx":"7","D:\\src\\HeroicGamesLauncher\\src\\components\\Library.tsx":"8","D:\\src\\HeroicGamesLauncher\\src\\components\\UI\\Header.tsx":"9","D:\\src\\HeroicGamesLauncher\\src\\components\\NavBar.tsx":"10","D:\\src\\HeroicGamesLauncher\\src\\components\\UI\\GamePage.tsx":"11","D:\\src\\HeroicGamesLauncher\\src\\components\\UI\\Update.tsx":"12","D:\\src\\HeroicGamesLauncher\\src\\components\\Settings\\index.tsx":"13","D:\\src\\HeroicGamesLauncher\\src\\components\\UI\\GameCard.tsx":"14","D:\\src\\HeroicGamesLauncher\\src\\components\\UI\\SearchBar.tsx":"15","D:\\src\\HeroicGamesLauncher\\src\\components\\UI\\UserSelector.tsx":"16","D:\\src\\HeroicGamesLauncher\\src\\components\\UI\\ToggleSwitch.tsx":"17","D:\\src\\HeroicGamesLauncher\\src\\components\\Settings\\OtherSettings.tsx":"18","D:\\src\\HeroicGamesLauncher\\src\\components\\Settings\\WineSettings.tsx":"19","D:\\src\\HeroicGamesLauncher\\src\\components\\Settings\\GeneralSettings.tsx":"20","D:\\src\\HeroicGamesLauncher\\src\\components\\Settings\\SyncSaves.tsx":"21","D:\\src\\HeroicGamesLauncher\\src\\components\\Settings\\Tools.tsx":"22","D:\\src\\HeroicGamesLauncher\\src\\hooks\\index.ts":"23","D:\\src\\HeroicGamesLauncher\\src\\components\\UI\\InfoBox.tsx":"24","D:\\src\\HeroicGamesLauncher\\src\\hooks\\useToggle.ts":"25"},{"size":608,"mtime":1611246169125,"results":"26","hashOfConfig":"27"},{"size":440,"mtime":1611246169125,"results":"28","hashOfConfig":"27"},{"size":1770,"mtime":1611246279839,"results":"29","hashOfConfig":"27"},{"size":3195,"mtime":1611246279843,"results":"30","hashOfConfig":"27"},{"size":2803,"mtime":1611251608128,"results":"31","hashOfConfig":"27"},{"size":470,"mtime":1611246279842,"results":"32","hashOfConfig":"27"},{"size":3237,"mtime":1611246169119,"results":"33","hashOfConfig":"27"},{"size":677,"mtime":1611246169119,"results":"34","hashOfConfig":"27"},{"size":1197,"mtime":1611246279842,"results":"35","hashOfConfig":"27"},{"size":722,"mtime":1611246279840,"results":"36","hashOfConfig":"27"},{"size":11261,"mtime":1611246279841,"results":"37","hashOfConfig":"27"},{"size":226,"mtime":1611246169123,"results":"38","hashOfConfig":"27"},{"size":6212,"mtime":1611277044324,"results":"39","hashOfConfig":"27"},{"size":2174,"mtime":1611246279841,"results":"40","hashOfConfig":"27"},{"size":900,"mtime":1611246169122,"results":"41","hashOfConfig":"27"},{"size":1053,"mtime":1611246169123,"results":"42","hashOfConfig":"27"},{"size":403,"mtime":1611246169122,"results":"43","hashOfConfig":"27"},{"size":1258,"mtime":1611259157174,"results":"44","hashOfConfig":"27"},{"size":2742,"mtime":1611276974588,"results":"45","hashOfConfig":"27"},{"size":4636,"mtime":1611246279840,"results":"46","hashOfConfig":"27"},{"size":4989,"mtime":1611246279840,"results":"47","hashOfConfig":"27"},{"size":907,"mtime":1611246169121,"results":"48","hashOfConfig":"27"},{"size":42,"mtime":1611246169124,"results":"49","hashOfConfig":"27"},{"size":559,"mtime":1611246169122,"results":"50","hashOfConfig":"27"},{"size":295,"mtime":1611246169124,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"p47n6l",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},"D:\\src\\HeroicGamesLauncher\\src\\index.tsx",[],["106","107"],"D:\\src\\HeroicGamesLauncher\\src\\reportWebVitals.ts",[],"D:\\src\\HeroicGamesLauncher\\src\\App.tsx",[],"D:\\src\\HeroicGamesLauncher\\src\\state\\GlobalState.tsx",[],"D:\\src\\HeroicGamesLauncher\\src\\helper.ts",[],"D:\\src\\HeroicGamesLauncher\\src\\state\\ContextProvider.tsx",[],"D:\\src\\HeroicGamesLauncher\\src\\components\\Login.tsx",[],"D:\\src\\HeroicGamesLauncher\\src\\components\\Library.tsx",[],"D:\\src\\HeroicGamesLauncher\\src\\components\\UI\\Header.tsx",[],"D:\\src\\HeroicGamesLauncher\\src\\components\\NavBar.tsx",[],"D:\\src\\HeroicGamesLauncher\\src\\components\\UI\\GamePage.tsx",[],"D:\\src\\HeroicGamesLauncher\\src\\components\\UI\\Update.tsx",[],"D:\\src\\HeroicGamesLauncher\\src\\components\\Settings\\index.tsx",["108"],"import { IpcRendererEvent } from \"electron\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { NavLink, useParams } from 'react-router-dom';\r\nimport { getGameInfo, writeConfig } from \"../../helper\";\r\nimport { useToggle } from \"../../hooks\";\r\nimport { AppSettings, WineProps } from '../../types';\r\nimport Header from \"../UI/Header\";\r\nimport GeneralSettings from './GeneralSettings';\r\nimport OtherSettings from './OtherSettings';\r\nimport SyncSaves from './SyncSaves';\r\nimport Tools from './Tools';\r\nimport WineSettings from './WineSettings';\r\n\r\nconst {\r\n  ipcRenderer,\r\n} = window.require(\"electron\");\r\n\r\ninterface RouteParams {\r\n  appName: string;\r\n  type: string;\r\n}\r\n\r\n// TODO: add option to add Custom wine\r\n// TODO: add feedback when launching winecfg and winetricks\r\n\r\nexport default function Settings() {\r\n  const [wineVersion, setWineversion] = useState({\r\n    name: \"Wine Default\",\r\n    bin: \"/usr/bin/wine\",\r\n  } as WineProps);\r\n  const [winePrefix, setWinePrefix] = useState(\"~/.wine\");\r\n  const [defaultInstallPath, setDefaultInstallPath] = useState(\"\");\r\n  const [otherOptions, setOtherOptions] = useState(\"\");\r\n  const [egsLinkedPath, setEgsLinkedPath] = useState(\"\")\r\n  const [egsPath, setEgsPath] = useState(egsLinkedPath);\r\n  const [savesPath, setSavesPath] = useState('');\r\n  const { on: useGameMode, toggle: toggleUseGameMode, setOn: setUseGameMode } = useToggle(false);\r\n  const { on: showFps, toggle: toggleFps, setOn: setShowFps } = useToggle(false);\r\n\r\n  const [haveCloudSaving, setHaveCloudSaving] = useState({cloudSaveEnabled: false, saveFolder: \"\"});\r\n  const [autoSyncSaves, setAutoSyncSaves] = useState(false)\r\n  const [altWine, setAltWine] = useState([] as WineProps[]);\r\n\r\n  const { appName, type } = useParams() as RouteParams;\r\n  const isDefault = appName === 'default'\r\n  const isGeneralSettings = type === 'general'\r\n  const isWineSettings = type === 'wine'\r\n  const isSyncSettings = type === 'sync'\r\n  const isOtherSettings = type === 'other'\r\n\r\n  const settings = isDefault ? 'defaultSettings' : appName\r\n\r\n  useEffect(() => {\r\n    ipcRenderer.send(\"requestSettings\", appName);\r\n    ipcRenderer.once(\r\n      settings,\r\n      async (event: IpcRendererEvent, config: AppSettings) => {\r\n        setUseGameMode(config.useGameMode || false);\r\n        setShowFps(config.showFps || false);\r\n        setDefaultInstallPath(config.defaultInstallPath);\r\n        setWineversion(config.wineVersion);\r\n        setWinePrefix(config.winePrefix);\r\n        setOtherOptions(config.otherOptions);\r\n        setEgsLinkedPath(config.egsLinkedPath || \"\")\r\n        setEgsPath(config.egsLinkedPath || \"\")\r\n        setSavesPath(config.savesPath || \"\")\r\n        setAutoSyncSaves(config.autoSyncSaves)\r\n        if (!isDefault){\r\n          const {cloudSaveEnabled, saveFolder} = await getGameInfo(appName)\r\n          setHaveCloudSaving({cloudSaveEnabled, saveFolder})\r\n        }\r\n        \r\n        ipcRenderer.send(\"getAlternativeWine\");\r\n        ipcRenderer.on(\r\n          \"alternativeWine\",\r\n          (event: IpcRendererEvent, args: WineProps[]) => setAltWine(args)\r\n        );\r\n      }\r\n    );\r\n  }, [appName, settings, type, isDefault]);\r\n\r\n    const GlobalSettings = {\r\n        defaultSettings: {\r\n          defaultInstallPath,\r\n          wineVersion,\r\n          winePrefix,\r\n          otherOptions,\r\n          useGameMode,\r\n          egsLinkedPath,\r\n          showFps\r\n        },\r\n    }\r\n\r\n    const GameSettings = {\r\n      [appName]: {\r\n        wineVersion,\r\n        winePrefix,\r\n        otherOptions,\r\n        useGameMode,\r\n        savesPath,\r\n        showFps,\r\n        autoSyncSaves\r\n      },\r\n    }\r\n\r\n    const settingsToSave = isDefault ? GlobalSettings : GameSettings\r\n    const returnPath = isDefault ? '/' : `/gameconfig/${appName}`\r\n\r\n    useEffect(() => {\r\n      writeConfig([appName, settingsToSave])\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [GlobalSettings, GameSettings, appName])\r\n  \r\n    return (\r\n    <>\r\n      <Header goTo={returnPath} renderBackButton />\r\n      <div className=\"Settings\">\r\n        <div className='settingsNavbar'>\r\n          {isDefault && \r\n          <NavLink to={{ pathname: '/settings/default/general' }}>\r\n              General\r\n          </NavLink>}\r\n          \r\n          {(!isDefault && haveCloudSaving.cloudSaveEnabled) && \r\n          <NavLink to={{ pathname: `/settings/${appName}/sync`}}>\r\n            Sync\r\n          </NavLink>}\r\n          <NavLink to={{ pathname: `/settings/${appName}/other`}}>\r\n            Other\r\n          </NavLink>\r\n        </div>\r\n        <div className=\"settingsWrapper\">\r\n          {isGeneralSettings &&\r\n            <GeneralSettings \r\n              egsPath={egsPath} \r\n              setEgsPath={setEgsPath} \r\n              egsLinkedPath={egsLinkedPath}\r\n              setEgsLinkedPath={setEgsLinkedPath}\r\n              defaultInstallPath={defaultInstallPath} \r\n              setDefaultInstallPath={setDefaultInstallPath}\r\n            />          \r\n          }\r\n          {isWineSettings && \r\n          <WineSettings \r\n            altWine={altWine}\r\n            wineVersion={wineVersion}\r\n            winePrefix={winePrefix}\r\n            setWineversion={setWineversion}\r\n            setWinePrefix={setWinePrefix}\r\n          />}\r\n          {isOtherSettings && \r\n          <OtherSettings \r\n            otherOptions={otherOptions} \r\n            setOtherOptions={setOtherOptions} \r\n            useGameMode={useGameMode}\r\n            toggleUseGameMode={toggleUseGameMode}\r\n            showFps={showFps}\r\n            toggleFps={toggleFps}\r\n          />}\r\n          {isSyncSettings &&\r\n            <SyncSaves \r\n              savesPath={savesPath}\r\n              setSavesPath={setSavesPath}\r\n              appName={appName}\r\n              saveFolder={haveCloudSaving.saveFolder}\r\n              autoSyncSaves={autoSyncSaves}\r\n              setAutoSyncSaves={setAutoSyncSaves}\r\n            />\r\n          }\r\n          {isWineSettings && \r\n          <Tools \r\n            winePrefix={winePrefix}\r\n            wineVersion={wineVersion}\r\n          />}\r\n          <span className=\"save\">\r\n              Settings are saved automatically\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","D:\\src\\HeroicGamesLauncher\\src\\components\\UI\\GameCard.tsx",[],"D:\\src\\HeroicGamesLauncher\\src\\components\\UI\\SearchBar.tsx",[],"D:\\src\\HeroicGamesLauncher\\src\\components\\UI\\UserSelector.tsx",[],"D:\\src\\HeroicGamesLauncher\\src\\components\\UI\\ToggleSwitch.tsx",[],"D:\\src\\HeroicGamesLauncher\\src\\components\\Settings\\OtherSettings.tsx",["109"],"import React, { ChangeEvent } from \"react\";\r\nimport InfoBox from '../UI/InfoBox';\r\nimport ToggleSwitch from '../UI/ToggleSwitch';\r\n\r\n\r\ninterface Props {\r\n  otherOptions: string\r\n  setOtherOptions: (value: string) => void\r\n  useGameMode: boolean\r\n  toggleUseGameMode: () => void\r\n  showFps: boolean\r\n  toggleFps: () => void\r\n}\r\n\r\nexport default function OtherSettings({\r\n  otherOptions, \r\n  setOtherOptions\r\n}: Props) {\r\n\r\n  const handleInputChange = (event: ChangeEvent<HTMLInputElement>) => setOtherOptions(event.currentTarget.value)\r\n\r\n  return (\r\n    <>\r\n      <span className=\"setting\">\r\n        <span className=\"settingText\">\r\n          Advanced Options (Enviroment Variables):\r\n        </span>\r\n        <span>\r\n          <input\r\n            id=\"otherOptions\"\r\n            type=\"text\"\r\n            placeholder={\"Put here other launch options\"}\r\n            className=\"settingSelect\"\r\n            value={otherOptions}\r\n            onChange={handleInputChange}\r\n          />\r\n        </span>\r\n      </span>\r\n      <InfoBox>\r\n      Type bellow any advanced options to launch the game if want, like: <strong>MANGOHUD=1</strong> to show Mangohud or <strong>PULSE_LATENCY_MSEC=60</strong> to fix audio in some games, etc.\r\n      </InfoBox>\r\n    </>\r\n  );\r\n}\r\n","D:\\src\\HeroicGamesLauncher\\src\\components\\Settings\\WineSettings.tsx",[],"D:\\src\\HeroicGamesLauncher\\src\\components\\Settings\\GeneralSettings.tsx",[],"D:\\src\\HeroicGamesLauncher\\src\\components\\Settings\\SyncSaves.tsx",[],"D:\\src\\HeroicGamesLauncher\\src\\components\\Settings\\Tools.tsx",[],"D:\\src\\HeroicGamesLauncher\\src\\hooks\\index.ts",[],"D:\\src\\HeroicGamesLauncher\\src\\components\\UI\\InfoBox.tsx",[],"D:\\src\\HeroicGamesLauncher\\src\\hooks\\useToggle.ts",[],["110","111"],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":80,"column":6,"nodeType":"118","endLine":80,"endColumn":42,"suggestions":"119"},{"ruleId":"120","severity":1,"message":"121","line":3,"column":8,"nodeType":"122","messageId":"123","endLine":3,"endColumn":20},{"ruleId":"112","replacedBy":"124"},{"ruleId":"114","replacedBy":"125"},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setShowFps' and 'setUseGameMode'. Either include them or remove the dependency array.","ArrayExpression",["128"],"@typescript-eslint/no-unused-vars","'ToggleSwitch' is defined but never used.","Identifier","unusedVar",["126"],["127"],"no-global-assign","no-unsafe-negation",{"desc":"129","fix":"130"},"Update the dependencies array to be: [appName, settings, type, isDefault, setUseGameMode, setShowFps]",{"range":"131","text":"132"},[3121,3157],"[appName, settings, type, isDefault, setUseGameMode, setShowFps]"]